name: Create Jira issue
on:
  issues:
    types: [opened]

jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Process Issue Body
        id: process_body
        run: |
            BODY=$(echo '${{ github.event.issue.body }}' | sed 's/<!--.*-->//g' | awk '
            BEGIN {
            print "h2. ✨ 어떤 기능인가요?"
            feature_section = 0
            todo_section = 0
            reference_section = 0
         }
            /^## 어떤 기능인가요\?/ {feature_section = 1; next}
            /^## 작업 상세 내용/ {feature_section = 0; todo_section = 1; print "\nh2. 📚 작업 상세 내용"; next}
            /^## 참고할만한 자료/ {todo_section = 0; reference_section = 1; print "\nh2. 👀 참고할만한 자료(선택)"; next}
            feature_section && !/^$/ {print}
            todo_section {print}
            reference_section {print}
            ')
            echo "processed_body<<EOF" >> $GITHUB_OUTPUT
            echo "$BODY" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Issue
        uses: atlassian/gajira-create@v3
        with:
          project: ISSUE
          issuetype: Task
          summary: '${{ github.event.issue.title }}'
          description: |
            h2. 이슈 상세 정보
            * GitHub Issue URL: ${{ github.event.issue.html_url }}
            * 생성자: ${{ github.event.issue.user.login }}
            * 라벨: ${{ join(github.event.issue.labels.*.name, ', ') }}
            
            ${{ steps.process_body.outputs.processed_body }}